# version: '3.7'
services:
  web:
    # image: node:latest
    build: .
    command: nodemon index.js
    # command: node index.js
    volumes:
      - ./:/home/node/app
    working_dir: /home/node/app
    # volumes:
    #   - ./:/home/node/app
    # working_dir: /home/node/app
    networks:
      - frontend
      - backend
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=$DATABASE_URL

  postgres:
    image: postgres:17.5
    # restart: always
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5438:5432'
    networks:
      - backend
      - frontend
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      # Enable the first one to populate the DB
      # # copy the sql script to create tables
      # - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # # copy the sql script to fill tables
      # - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql

  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto:/etc/mosquitto
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - frontend
  # lookie:
  #   image: debian:trixie-slim
  #   networks:
  #     # - frontend
  #     - backend
  #   command: tail -f /dev/null # Example command to keep the container running
  #   depends_on:
  #     - postgres
  #     - web
  #   environment:
  #     DATABASE_URL: postgres://postgres@postgres/todos

  pgadmin4:
    image: dpage/pgadmin4:2025-07-22-1
    ports:
      - "3005:80"
      - "3006:443"
    networks:
      - frontend
      - backend
    # command: tail -f /dev/null # Example command to keep the container running
    depends_on:
      - postgres
      - web
    environment:
        - DATABASE_URL=$DATABASE_URL
        - PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL
        - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD

networks:
  frontend:
    # Specify driver options
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      # com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
  backend:
    # Use a custom driver
    # driver: custom-driver
